---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<Layout 
  title={post.data.title}
  description={post.data.description}
  date={post.data.date}
  tags={post.data.tags}
  author={post.data.author}
>
  <article class="max-w-4xl mx-auto">
    <!-- Article Header -->
    <header class="mb-8">
      <div class="flex items-center gap-4 mb-4">
        <span class="text-sm text-gray-500">
          {new Date(post.data.date).toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </span>
        <span class="text-sm text-primary-600 font-medium">
          {post.data.source}
        </span>
        {post.data.sourceUrl && (
          <a 
            href={post.data.sourceUrl} 
            target="_blank" 
            rel="noopener noreferrer"
            class="text-sm text-gray-500 hover:text-primary-600 transition-colors"
          >
            Original Source â†’
          </a>
        )}
      </div>
      
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6 leading-tight">
        {post.data.title}
      </h1>
      
      <p class="text-xl text-gray-600 mb-6 leading-relaxed">
        {post.data.description}
      </p>
      
      {post.data.tags && post.data.tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mb-6">
          {post.data.tags.map((tag: string) => (
            <a 
              href={`/tags/${tag}`} 
              class="bg-primary-100 text-primary-800 px-3 py-1 rounded-full text-sm hover:bg-primary-200 transition-colors"
            >
              {tag}
            </a>
          ))}
        </div>
      )}
    </header>

    <!-- Article Content -->
    <div class="prose prose-lg max-w-none">
      <Content />
    </div>

    <!-- Article Footer -->
    <footer class="mt-12 pt-8 border-t border-gray-200">
      <div class="flex items-center justify-between">
        <div class="flex items-center gap-4">
          <span class="text-sm text-gray-500">Written by {post.data.author || 'Tech News Bot'}</span>
        </div>
        
        <div class="flex items-center gap-4">
          <button 
            onclick="window.print()"
            class="text-sm text-gray-500 hover:text-gray-700 transition-colors"
          >
            ðŸ“„ Print
          </button>
          <button 
            onclick="navigator.share({title: document.title, url: window.location.href})"
            class="text-sm text-gray-500 hover:text-gray-700 transition-colors"
          >
            ðŸ“¤ Share
          </button>
        </div>
      </div>
    </footer>

    <!-- Related Articles -->
    <section class="mt-16">
      <h2 class="text-2xl font-bold mb-8 text-gray-900">Related Articles</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {getRelatedPosts(post).slice(0, 4).map((relatedPost) => (
          <article class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
            <div class="p-6">
              <div class="flex items-center gap-4 mb-3">
                <span class="text-sm text-gray-500">
                  {new Date(relatedPost.data.date).toLocaleDateString()}
                </span>
                <span class="text-sm text-primary-600 font-medium">
                  {relatedPost.data.source}
                </span>
              </div>
              <h3 class="text-lg font-semibold mb-3 text-gray-900">
                <a href={`/blog/${relatedPost.slug}`} class="hover:text-primary-600 transition-colors">
                  {relatedPost.data.title}
                </a>
              </h3>
              <p class="text-gray-600 mb-4 text-sm line-clamp-2">
                {relatedPost.data.description}
              </p>
              <a href={`/blog/${relatedPost.slug}`} class="text-primary-600 hover:text-primary-700 text-sm font-medium">
                Read more â†’
              </a>
            </div>
          </article>
        ))}
      </div>
    </section>
  </article>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Prose styles for article content */
  .prose {
    color: #374151;
  }
  
  .prose h1,
  .prose h2,
  .prose h3,
  .prose h4,
  .prose h5,
  .prose h6 {
    color: #111827;
    font-weight: 700;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }
  
  .prose h1 { font-size: 2.25rem; }
  .prose h2 { font-size: 1.875rem; }
  .prose h3 { font-size: 1.5rem; }
  .prose h4 { font-size: 1.25rem; }
  
  .prose p {
    margin-bottom: 1.5rem;
    line-height: 1.75;
  }
  
  .prose a {
    color: #3b82f6;
    text-decoration: underline;
  }
  
  .prose a:hover {
    color: #1d4ed8;
  }
  
  .prose ul,
  .prose ol {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }
  
  .prose li {
    margin-bottom: 0.5rem;
  }
  
  .prose blockquote {
    border-left: 4px solid #3b82f6;
    padding-left: 1rem;
    margin: 2rem 0;
    font-style: italic;
    color: #6b7280;
  }
  
  .prose code {
    background-color: #f3f4f6;
    padding: 0.25rem 0.5rem;
    border-radius: 0.375rem;
    font-size: 0.875rem;
  }
  
  .prose pre {
    background-color: #1f2937;
    color: #f9fafb;
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin: 2rem 0;
  }
  
  .prose pre code {
    background-color: transparent;
    padding: 0;
    color: inherit;
  }
  
  .prose img {
    border-radius: 0.5rem;
    margin: 2rem 0;
  }
  
  .prose table {
    width: 100%;
    border-collapse: collapse;
    margin: 2rem 0;
  }
  
  .prose th,
  .prose td {
    border: 1px solid #d1d5db;
    padding: 0.75rem;
    text-align: left;
  }
  
  .prose th {
    background-color: #f9fafb;
    font-weight: 600;
  }
</style>

<script>
  // Get related posts based on tags and category
  function getRelatedPosts(currentPost) {
    // This would be implemented to fetch related posts
    // For now, return empty array
    return [];
  }
</script>