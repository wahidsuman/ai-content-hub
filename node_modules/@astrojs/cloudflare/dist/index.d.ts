import type { AstroIntegration } from 'astro';
import type { RUNTIME } from './utils/local-runtime.js';
export type { AdvancedRuntime } from './entrypoints/server.advanced.js';
export type { DirectoryRuntime } from './entrypoints/server.directory.js';
export type Options = {
    mode?: 'directory' | 'advanced';
    functionPerRoute?: boolean;
    imageService?: 'passthrough' | 'cloudflare' | 'compile';
    /** Configure automatic `routes.json` generation */
    routes?: {
        /** Strategy for generating `include` and `exclude` patterns
         * - `auto`: Will use the strategy that generates the least amount of entries.
         * - `include`: For each page or endpoint in your application that is not prerendered, an entry in the `include` array will be generated. For each page that is prerendered and whoose path is matched by an `include` entry, an entry in the `exclude` array will be generated.
         * - `exclude`: One `"/*"` entry in the `include` array will be generated. For each page that is prerendered, an entry in the `exclude` array will be generated.
         * */
        strategy?: 'auto' | 'include' | 'exclude';
        /** Additional `include` patterns */
        include?: string[];
        /** Additional `exclude` patterns */
        exclude?: string[];
    };
    /**
     * { mode: 'off' }: current behaviour (wrangler is needed)
     * { mode: 'local', ... }: adds cf request object, locals bindings, env vars/secrets which are defined by the user to `astro.dev` with `Astro.locals.runtime` / `context.locals.runtime`
     */
    runtime?: {
        mode: 'off';
    } | {
        mode: Extract<RUNTIME, {
            type: 'pages';
        }>['mode'];
        type: Extract<RUNTIME, {
            type: 'pages';
        }>['type'];
        persistTo?: Extract<RUNTIME, {
            type: 'pages';
        }>['persistTo'];
        bindings?: Extract<RUNTIME, {
            type: 'pages';
        }>['bindings'];
    } | {
        mode: Extract<RUNTIME, {
            type: 'workers';
        }>['mode'];
        type: Extract<RUNTIME, {
            type: 'workers';
        }>['type'];
        persistTo?: Extract<RUNTIME, {
            type: 'workers';
        }>['persistTo'];
    };
    wasmModuleImports?: boolean;
};
export default function createIntegration(args?: Options): AstroIntegration;
